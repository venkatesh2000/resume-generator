{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Venkatesh/Documents/6th Sem/Web Dev/project/resume-generator/src/components/Education/Education.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport NavButtons from \"../NavButtons/NavButtons.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Education = props => {\n  _s();\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      \"& > *\": {\n        marginTop: theme.spacing(2),\n        width: \"75ch\"\n      }\n    }\n  }));\n  const classes = useStyles();\n  const {\n    resume,\n    setResume,\n    step,\n    setStep\n  } = props;\n  const [values, setValues] = React.useState({\n    college: \"\",\n    degree: \"\",\n    cgpa: \"\",\n    from: \"\",\n    to: \"\"\n  });\n  const [errors, setErrors] = React.useState({\n    college: false,\n    degree: false,\n    cgpa: false,\n    from: false,\n    to: false\n  });\n  const [errorMessages, setErrorMessages] = React.useState({\n    college: \"\",\n    degree: \"\",\n    cgpa: \"\",\n    from: \"\",\n    to: \"\"\n  });\n  const [isValidated, setIsValidated] = React.useState(false);\n\n  const onValueChange = (key, event) => {\n    values[key] = event.target.value;\n    setValues({ ...values\n    });\n  };\n\n  const validateInfo = () => {\n    setIsValidated(false);\n    const newErrors = {\n      name: false,\n      email: false,\n      pno: false,\n      github: false,\n      linkedin: false,\n      website: false\n    };\n    const newErrorMessages = {\n      name: \"\",\n      email: \"\",\n      pno: \"\",\n      github: \"\",\n      linkedin: \"\",\n      website: \"\"\n    };\n\n    if (!values.college.length) {\n      newErrors[\"college\"] = true;\n      newErrorMessages[\"college\"] = \"This is a required field!\";\n    }\n\n    if (!values.degree.length) {\n      newErrors[\"degree\"] = true;\n      newErrorMessages[\"degree\"] = \"This is a required field!\";\n    }\n\n    if (!values.cgpa.length) {\n      newErrors[\"cgpa\"] = true;\n      newErrorMessages[\"cgpa\"] = \"This is a required field!\";\n    }\n\n    if (isNaN(values.cgpa)) {\n      newErrors[\"cgpa\"] = true;\n      newErrorMessages[\"cgpa\"] = \"Please enter a valid number!\";\n    }\n\n    if (!values.from.length) {\n      newErrors[\"from\"] = true;\n      newErrorMessages[\"from\"] = \"This is a required field!\";\n    }\n\n    if (isNaN(values.from)) {\n      newErrors[\"from\"] = true;\n      newErrorMessages[\"from\"] = \"Please enter a valid number!\";\n    }\n\n    if (!values.to.length) {\n      newErrors[\"to\"] = true;\n      newErrorMessages[\"to\"] = \"This is a required field!\";\n    }\n\n    if (isNaN(values.to)) {\n      newErrors[\"to\"] = true;\n      newErrorMessages[\"to\"] = \"Please enter a valid number!\";\n    }\n\n    setErrors({ ...newErrors\n    });\n    setErrorMessages({ ...newErrorMessages\n    });\n    setIsValidated(true);\n  };\n\n  const handleNext = () => {\n    if (!Object.values(errors).includes(true)) {\n      setResume({ ...resume,\n        ...values\n      });\n      setStep(step + 1);\n    }\n  };\n\n  React.useEffect(() => {\n    if (isValidated) handleNext();\n  });\n\n  const init = () => {\n    if (\"college\" in resume) {\n      const newValues = {};\n      newValues[\"college\"] = resume[\"college\"];\n      newValues[\"degree\"] = resume[\"degree\"];\n      newValues[\"cgpa\"] = resume[\"cgpa\"];\n      newValues[\"from\"] = resume[\"from\"];\n      newValues[\"to \"] = resume[\"to\"];\n      setValues({ ...newValues\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    init();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.root,\n          autoComplete: \"on\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"College\",\n            variant: \"outlined\",\n            value: values.college,\n            onChange: event => onValueChange(\"college\", event),\n            error: errors.college,\n            helperText: errors.college && errorMessages.college,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Degree\",\n            variant: \"outlined\",\n            value: values.degree,\n            onChange: event => onValueChange(\"degree\", event),\n            error: errors.degree,\n            helperText: errors.degree && errorMessages.degree,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"CGPA\",\n            variant: \"outlined\",\n            value: values.cgpa,\n            onChange: event => onValueChange(\"cgpa\", event),\n            error: errors.cgpa,\n            helperText: errors.cgpa && errorMessages.cgpa,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Joining Year\",\n            variant: \"outlined\",\n            value: values.from,\n            onChange: event => onValueChange(\"from\", event),\n            error: errors.from,\n            helperText: errors.from && errorMessages.from,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Year of Graduation\",\n            variant: \"outlined\",\n            value: values.to,\n            onChange: event => onValueChange(\"to\", event),\n            error: errors.to,\n            helperText: errors.to && errorMessages.to,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavButtons, { ...props,\n      validateInfo: validateInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Education, \"4Bo/KcKSHZucSdTCIc4mVFfRMds=\", true);\n\n_c = Education;\nexport default Education;\n\nvar _c;\n\n$RefreshReg$(_c, \"Education\");","map":{"version":3,"sources":["/mnt/c/Users/Venkatesh/Documents/6th Sem/Web Dev/project/resume-generator/src/components/Education/Education.jsx"],"names":["React","Card","CardContent","makeStyles","TextField","NavButtons","Education","props","useStyles","theme","root","marginTop","spacing","width","classes","resume","setResume","step","setStep","values","setValues","useState","college","degree","cgpa","from","to","errors","setErrors","errorMessages","setErrorMessages","isValidated","setIsValidated","onValueChange","key","event","target","value","validateInfo","newErrors","name","email","pno","github","linkedin","website","newErrorMessages","length","isNaN","handleNext","Object","includes","useEffect","init","newValues"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NavButtons from \"../NavButtons/NavButtons.jsx\";\r\n\r\nconst Education = (props) => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \"& > *\": {\r\n        marginTop: theme.spacing(2),\r\n        width: \"75ch\",\r\n      },\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const { resume, setResume, step, setStep } = props;\r\n  const [values, setValues] = React.useState({\r\n    college: \"\",\r\n    degree: \"\",\r\n    cgpa: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n  });\r\n  const [errors, setErrors] = React.useState({\r\n    college: false,\r\n    degree: false,\r\n    cgpa: false,\r\n    from: false,\r\n    to: false,\r\n  });\r\n  const [errorMessages, setErrorMessages] = React.useState({\r\n    college: \"\",\r\n    degree: \"\",\r\n    cgpa: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n  });\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n\r\n  const onValueChange = (key, event) => {\r\n    values[key] = event.target.value;\r\n    setValues({ ...values });\r\n  };\r\n  const validateInfo = () => {\r\n    setIsValidated(false);\r\n\r\n    const newErrors = {\r\n      name: false,\r\n      email: false,\r\n      pno: false,\r\n      github: false,\r\n      linkedin: false,\r\n      website: false,\r\n    };\r\n    const newErrorMessages = {\r\n      name: \"\",\r\n      email: \"\",\r\n      pno: \"\",\r\n      github: \"\",\r\n      linkedin: \"\",\r\n      website: \"\",\r\n    };\r\n\r\n    if (!values.college.length) {\r\n      newErrors[\"college\"] = true;\r\n      newErrorMessages[\"college\"] = \"This is a required field!\";\r\n    }\r\n    if (!values.degree.length) {\r\n      newErrors[\"degree\"] = true;\r\n      newErrorMessages[\"degree\"] = \"This is a required field!\";\r\n    }\r\n    if (!values.cgpa.length) {\r\n      newErrors[\"cgpa\"] = true;\r\n      newErrorMessages[\"cgpa\"] = \"This is a required field!\";\r\n    }\r\n    if (isNaN(values.cgpa)) {\r\n      newErrors[\"cgpa\"] = true;\r\n      newErrorMessages[\"cgpa\"] = \"Please enter a valid number!\";\r\n    }\r\n    if (!values.from.length) {\r\n      newErrors[\"from\"] = true;\r\n      newErrorMessages[\"from\"] = \"This is a required field!\";\r\n    }\r\n    if (isNaN(values.from)) {\r\n      newErrors[\"from\"] = true;\r\n      newErrorMessages[\"from\"] = \"Please enter a valid number!\";\r\n    }\r\n    if (!values.to.length) {\r\n      newErrors[\"to\"] = true;\r\n      newErrorMessages[\"to\"] = \"This is a required field!\";\r\n    }\r\n    if (isNaN(values.to)) {\r\n      newErrors[\"to\"] = true;\r\n      newErrorMessages[\"to\"] = \"Please enter a valid number!\";\r\n    }\r\n\r\n    setErrors({ ...newErrors });\r\n    setErrorMessages({ ...newErrorMessages });\r\n    setIsValidated(true);\r\n  };\r\n  const handleNext = () => {\r\n    if (!Object.values(errors).includes(true)) {\r\n      setResume({ ...resume, ...values });\r\n      setStep(step + 1);\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    if (isValidated) handleNext();\r\n  });\r\n  const init = () => {\r\n    if (\"college\" in resume) {\r\n      const newValues = {};\r\n      newValues[\"college\"] = resume[\"college\"];\r\n      newValues[\"degree\"] = resume[\"degree\"];\r\n      newValues[\"cgpa\"] = resume[\"cgpa\"];\r\n      newValues[\"from\"] = resume[\"from\"];\r\n      newValues[\"to \"] = resume[\"to\"];\r\n\r\n      setValues({ ...newValues });\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    init();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"card\">\r\n        <CardContent>\r\n          <form className={classes.root} autoComplete=\"on\">\r\n            <TextField\r\n              label=\"College\"\r\n              variant=\"outlined\"\r\n              value={values.college}\r\n              onChange={(event) => onValueChange(\"college\", event)}\r\n              error={errors.college}\r\n              helperText={errors.college && errorMessages.college}\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"Degree\"\r\n              variant=\"outlined\"\r\n              value={values.degree}\r\n              onChange={(event) => onValueChange(\"degree\", event)}\r\n              error={errors.degree}\r\n              helperText={errors.degree && errorMessages.degree}\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"CGPA\"\r\n              variant=\"outlined\"\r\n              value={values.cgpa}\r\n              onChange={(event) => onValueChange(\"cgpa\", event)}\r\n              error={errors.cgpa}\r\n              helperText={errors.cgpa && errorMessages.cgpa}\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"Joining Year\"\r\n              variant=\"outlined\"\r\n              value={values.from}\r\n              onChange={(event) => onValueChange(\"from\", event)}\r\n              error={errors.from}\r\n              helperText={errors.from && errorMessages.from}\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"Year of Graduation\"\r\n              variant=\"outlined\"\r\n              value={values.to}\r\n              onChange={(event) => onValueChange(\"to\", event)}\r\n              error={errors.to}\r\n              helperText={errors.to && errorMessages.to}\r\n              required\r\n            />\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n      <NavButtons {...props} validateInfo={validateInfo} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Education;\r\n"]},"metadata":{},"sourceType":"module"}