{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Venkatesh/Documents/6th Sem/Web Dev/project/resume-generator/src/components/Projects/Projects.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Project from \"./Project.jsx\";\nimport NavButtons from \"../NavButtons/NavButtons.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Projects = props => {\n  _s();\n\n  const {\n    step,\n    setStep,\n    numberOfExps\n  } = props;\n  const value = {\n    title: \"\",\n    link: \"\",\n    desc: \"\"\n  };\n  const error = {\n    title: false,\n    link: false,\n    desc: false\n  };\n  const errorMessage = {\n    title: \"\",\n    link: \"\",\n    desc: \"\"\n  };\n  const [values, setValues] = React.useState({\n    p1: { ...value\n    },\n    p2: { ...value\n    },\n    p3: { ...value\n    },\n    p4: { ...value\n    }\n  });\n  const [errors, setErrors] = React.useState({\n    p1: { ...error\n    },\n    p2: { ...error\n    },\n    p3: { ...error\n    },\n    p4: { ...error\n    }\n  });\n  const [errorMessages, setErrorMessages] = React.useState({\n    p1: { ...errorMessage\n    },\n    p2: { ...errorMessage\n    },\n    p3: { ...errorMessage\n    },\n    p4: { ...errorMessage\n    }\n  });\n  const [projects, setProjects] = React.useState(0);\n  const [isValidated, setIsValidated] = React.useState(false);\n\n  const onChange = (id, value) => {\n    values[id] = value;\n    setValues({ ...values\n    });\n  };\n\n  const validateInfo = () => {\n    setIsValidated(false);\n    let currProjects = 0;\n\n    for (let pro in values) {\n      let newError = {\n        title: true,\n        link: true,\n        desc: true\n      };\n      let newErrorMessage = {\n        title: \"Please provide complete info for this project!\",\n        link: \"Please provide complete info for this project!\",\n        desc: \"Please provide complete info for this project!\"\n      };\n      let flag = false,\n          count = 0;\n\n      for (let key in values[pro]) {\n        if (values[pro][key].length) {\n          flag = true;\n          ++count;\n          newError[key] = false;\n          newErrorMessage[key] = \"\";\n        }\n      }\n\n      if (count === 3) ++currProjects;\n\n      if (!flag) {\n        newError = {\n          title: false,\n          link: false,\n          desc: false\n        };\n        newErrorMessage = {\n          title: \"\",\n          link: \"\",\n          desc: \"\"\n        };\n      }\n\n      errors[pro] = newError;\n      errorMessages[pro] = newErrorMessage;\n    }\n\n    setProjects(currProjects);\n    setErrors({ ...errors\n    });\n    setErrorMessages({ ...errorMessages\n    });\n    setIsValidated(true);\n  };\n\n  const handleNext = () => {\n    let flag = false;\n\n    for (let error of Object.values(errors)) {\n      if (Object.values(error).includes(true)) {\n        flag = true;\n        break;\n      }\n    }\n\n    if (!flag && projects >= 2) setStep(step + 1);\n  };\n\n  const expIsOne = () => {\n    const newValues = {\n      p1: { ...value\n      },\n      p2: { ...value\n      },\n      p3: { ...value\n      }\n    };\n    const newErrors = {\n      p1: { ...error\n      },\n      p2: { ...error\n      },\n      p3: { ...error\n      }\n    };\n    const newErrorMessages = {\n      p1: { ...errorMessage\n      },\n      p2: { ...errorMessage\n      },\n      p3: { ...errorMessage\n      }\n    };\n    setValues({ ...newValues\n    });\n    setErrors({ ...newErrors\n    });\n    setErrorMessages({ ...newErrorMessages\n    });\n  };\n\n  React.useEffect(() => {\n    if (isValidated) handleNext();\n  });\n  React.useEffect(() => {\n    if (numberOfExps === 1) expIsOne();\n  }, []);\n\n  if (numberOfExps === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"As you haven't entered any experiences, please provide at least 2 projects below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        id: \"p1\",\n        onChange: onChange,\n        values: values[\"p1\"],\n        errors: errors[\"p1\"],\n        errorMessages: errorMessages[\"p1\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        id: \"p2\",\n        onChange: onChange,\n        values: values[\"p2\"],\n        errors: errors[\"p2\"],\n        errorMessages: errorMessages[\"p2\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        id: \"p3\",\n        onChange: onChange,\n        values: values[\"p3\"],\n        errors: errors[\"p3\"],\n        errorMessages: errorMessages[\"p3\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        id: \"p4\",\n        onChange: onChange,\n        values: values[\"p4\"],\n        errors: errors[\"p4\"],\n        errorMessages: errorMessages[\"p4\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavButtons, { ...props,\n        validateInfo: validateInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  } else if (numberOfExps === 1) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"As you have entered only 1 experience, please provide at least 1 project below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        id: \"p1\",\n        onChange: onChange,\n        values: values[\"p1\"],\n        errors: errors[\"p1\"],\n        errorMessages: errorMessages[\"p1\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        id: \"p2\",\n        onChange: onChange,\n        values: values[\"p2\"],\n        errors: errors[\"p2\"],\n        errorMessages: errorMessages[\"p2\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        id: \"p3\",\n        onChange: onChange,\n        values: values[\"p3\"],\n        errors: errors[\"p3\"],\n        errorMessages: errorMessages[\"p3\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavButtons, { ...props,\n        validateInfo: validateInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Projects, \"2CEr+qSjqy7rKvmBlPKThMPyIrY=\");\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/mnt/c/Users/Venkatesh/Documents/6th Sem/Web Dev/project/resume-generator/src/components/Projects/Projects.jsx"],"names":["React","Project","NavButtons","Projects","props","step","setStep","numberOfExps","value","title","link","desc","error","errorMessage","values","setValues","useState","p1","p2","p3","p4","errors","setErrors","errorMessages","setErrorMessages","projects","setProjects","isValidated","setIsValidated","onChange","id","validateInfo","currProjects","pro","newError","newErrorMessage","flag","count","key","length","handleNext","Object","includes","expIsOne","newValues","newErrors","newErrorMessages","useEffect"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Project from \"./Project.jsx\";\r\nimport NavButtons from \"../NavButtons/NavButtons.jsx\";\r\n\r\nconst Projects = (props) => {\r\n  const { step, setStep, numberOfExps } = props;\r\n  const value = {\r\n    title: \"\",\r\n    link: \"\",\r\n    desc: \"\",\r\n  };\r\n  const error = {\r\n    title: false,\r\n    link: false,\r\n    desc: false,\r\n  };\r\n  const errorMessage = {\r\n    title: \"\",\r\n    link: \"\",\r\n    desc: \"\",\r\n  };\r\n\r\n  const [values, setValues] = React.useState({\r\n    p1: { ...value },\r\n    p2: { ...value },\r\n    p3: { ...value },\r\n    p4: { ...value },\r\n  });\r\n  const [errors, setErrors] = React.useState({\r\n    p1: { ...error },\r\n    p2: { ...error },\r\n    p3: { ...error },\r\n    p4: { ...error },\r\n  });\r\n  const [errorMessages, setErrorMessages] = React.useState({\r\n    p1: { ...errorMessage },\r\n    p2: { ...errorMessage },\r\n    p3: { ...errorMessage },\r\n    p4: { ...errorMessage },\r\n  });\r\n  const [projects, setProjects] = React.useState(0);\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n\r\n  const onChange = (id, value) => {\r\n    values[id] = value;\r\n    setValues({ ...values });\r\n  };\r\n  const validateInfo = () => {\r\n    setIsValidated(false);\r\n\r\n    let currProjects = 0;\r\n    for (let pro in values) {\r\n      let newError = {\r\n        title: true,\r\n        link: true,\r\n        desc: true,\r\n      };\r\n      let newErrorMessage = {\r\n        title: \"Please provide complete info for this project!\",\r\n        link: \"Please provide complete info for this project!\",\r\n        desc: \"Please provide complete info for this project!\",\r\n      };\r\n\r\n      let flag = false,\r\n        count = 0;\r\n      for (let key in values[pro]) {\r\n        if (values[pro][key].length) {\r\n          flag = true;\r\n          ++count;\r\n          newError[key] = false;\r\n          newErrorMessage[key] = \"\";\r\n        }\r\n      }\r\n\r\n      if (count === 3) ++currProjects;\r\n      if (!flag) {\r\n        newError = {\r\n          title: false,\r\n          link: false,\r\n          desc: false,\r\n        };\r\n        newErrorMessage = {\r\n          title: \"\",\r\n          link: \"\",\r\n          desc: \"\",\r\n        };\r\n      }\r\n      errors[pro] = newError;\r\n      errorMessages[pro] = newErrorMessage;\r\n    }\r\n\r\n    setProjects(currProjects);\r\n    setErrors({ ...errors });\r\n    setErrorMessages({ ...errorMessages });\r\n    setIsValidated(true);\r\n  };\r\n  const handleNext = () => {\r\n    let flag = false;\r\n    for (let error of Object.values(errors)) {\r\n      if (Object.values(error).includes(true)) {\r\n        flag = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!flag && projects >= 2) setStep(step + 1);\r\n  };\r\n  const expIsOne = () => {\r\n    const newValues = {\r\n      p1: { ...value },\r\n      p2: { ...value },\r\n      p3: { ...value },\r\n    };\r\n    const newErrors = {\r\n      p1: { ...error },\r\n      p2: { ...error },\r\n      p3: { ...error },\r\n    };\r\n    const newErrorMessages = {\r\n      p1: { ...errorMessage },\r\n      p2: { ...errorMessage },\r\n      p3: { ...errorMessage },\r\n    };\r\n    setValues({ ...newValues });\r\n    setErrors({ ...newErrors });\r\n    setErrorMessages({ ...newErrorMessages });\r\n  };\r\n  React.useEffect(() => {\r\n    if (isValidated) handleNext();\r\n  });\r\n  React.useEffect(() => {\r\n    if (numberOfExps === 1) expIsOne();\r\n  }, []);\r\n\r\n  if (numberOfExps === 0) {\r\n    return (\r\n      <div>\r\n        <h3>\r\n          As you haven't entered any experiences, please provide at least 2\r\n          projects below\r\n        </h3>\r\n        <Project\r\n          id=\"p1\"\r\n          onChange={onChange}\r\n          values={values[\"p1\"]}\r\n          errors={errors[\"p1\"]}\r\n          errorMessages={errorMessages[\"p1\"]}\r\n        />\r\n        <Project\r\n          id=\"p2\"\r\n          onChange={onChange}\r\n          values={values[\"p2\"]}\r\n          errors={errors[\"p2\"]}\r\n          errorMessages={errorMessages[\"p2\"]}\r\n        />\r\n        <Project\r\n          id=\"p3\"\r\n          onChange={onChange}\r\n          values={values[\"p3\"]}\r\n          errors={errors[\"p3\"]}\r\n          errorMessages={errorMessages[\"p3\"]}\r\n        />\r\n        <Project\r\n          id=\"p4\"\r\n          onChange={onChange}\r\n          values={values[\"p4\"]}\r\n          errors={errors[\"p4\"]}\r\n          errorMessages={errorMessages[\"p4\"]}\r\n        />\r\n        <NavButtons {...props} validateInfo={validateInfo} />\r\n      </div>\r\n    );\r\n  } else if (numberOfExps === 1) {\r\n    return (\r\n      <div>\r\n        <h3>\r\n          As you have entered only 1 experience, please provide at least 1\r\n          project below\r\n        </h3>\r\n        <Project\r\n          id=\"p1\"\r\n          onChange={onChange}\r\n          values={values[\"p1\"]}\r\n          errors={errors[\"p1\"]}\r\n          errorMessages={errorMessages[\"p1\"]}\r\n        />\r\n        <Project\r\n          id=\"p2\"\r\n          onChange={onChange}\r\n          values={values[\"p2\"]}\r\n          errors={errors[\"p2\"]}\r\n          errorMessages={errorMessages[\"p2\"]}\r\n        />\r\n        <Project\r\n          id=\"p3\"\r\n          onChange={onChange}\r\n          values={values[\"p3\"]}\r\n          errors={errors[\"p3\"]}\r\n          errorMessages={errorMessages[\"p3\"]}\r\n        />\r\n        <NavButtons {...props} validateInfo={validateInfo} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Projects;\r\n"]},"metadata":{},"sourceType":"module"}