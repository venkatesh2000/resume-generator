{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Venkatesh/Documents/6th Sem/Web Dev/project/resume-generator/src/components/Projects/Projects.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Project from \"./Project.jsx\";\nimport NavButtons from \"../NavButtons/NavButtons.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Projects = props => {\n  _s();\n\n  const {\n    step,\n    setStep,\n    numberOfExps\n  } = props;\n  const value = {\n    title: \"\",\n    link: \"\",\n    desc: \"\"\n  };\n  const error = {\n    title: false,\n    link: false,\n    desc: false\n  };\n  const errorMessage = {\n    title: \"\",\n    link: \"\",\n    desc: \"\"\n  };\n  const [values, setValues] = React.useState({\n    p1: { ...value\n    },\n    p2: { ...value\n    },\n    p3: { ...value\n    },\n    p4: { ...value\n    }\n  });\n  const [errors, setErrors] = React.useState({\n    p1: { ...error\n    },\n    p2: { ...error\n    },\n    p3: { ...error\n    },\n    p4: { ...error\n    }\n  });\n  const [errorMessages, setErrorMessages] = React.useState({\n    p1: { ...errorMessage\n    },\n    p2: { ...errorMessage\n    },\n    p3: { ...errorMessage\n    },\n    p4: { ...errorMessage\n    }\n  });\n  const [isValidated, setIsValidated] = React.useState(false);\n\n  const handleNext = () => {\n    let flag = false;\n\n    for (let error of Object.values(errors)) {\n      if (Object.values(error).includes(true)) {\n        flag = true;\n        break;\n      }\n    }\n\n    if (!flag) setStep(step + 1);\n  };\n\n  React.useEffect(() => {\n    if (isValidated) handleNext();\n  }, [isValidated, handleNext]);\n\n  if (numberOfExps === 0) {\n    const onChange = (id, value) => {\n      values[id] = value;\n      setValues({ ...values\n      });\n    };\n\n    const validateInfo = () => {\n      setIsValidated(false);\n\n      for (let pro in values) {\n        let newError = {\n          title: true,\n          link: true,\n          desc: true\n        };\n        let newErrorMessage = {\n          title: \"Please provide complete info for this project!\",\n          link: \"Please provide complete info for this project!\",\n          desc: \"Please provide complete info for this project!\"\n        };\n        let flag = false;\n\n        for (let key in values[pro]) {\n          if (values[pro][key].length) {\n            flag = true;\n            newError[key] = false;\n            newErrorMessage[key] = \"\";\n          }\n        }\n\n        if (!flag) {\n          newError = {\n            title: false,\n            link: false,\n            desc: false\n          };\n          newErrorMessage = {\n            title: \"\",\n            link: \"\",\n            desc: \"\"\n          };\n        }\n\n        errors[pro] = newError;\n        errorMessages[pro] = newErrorMessage;\n      }\n\n      setErrors({ ...errors\n      });\n      setErrorMessages({ ...errorMessages\n      });\n      setIsValidated(true);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"As you haven't entered any experiences, please provoide at least 2 projects below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        id: \"p1\",\n        onChange: onChange,\n        values: values[\"p1\"],\n        errors: errors[\"p1\"],\n        errorMessages: errorMessages[\"p1\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        id: \"p2\",\n        onChange: onChange,\n        values: values[\"p2\"],\n        errors: errors[\"p2\"],\n        errorMessages: errorMessages[\"p2\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        id: \"p3\",\n        onChange: onChange,\n        values: values[\"p3\"],\n        errors: errors[\"p3\"],\n        errorMessages: errorMessages[\"p3\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Project, {\n        id: \"p4\",\n        onChange: onChange,\n        values: values[\"p4\"],\n        errors: errors[\"p4\"],\n        errorMessages: errorMessages[\"p4\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavButtons, { ...props,\n        validateInfo: validateInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(NavButtons, { ...props,\n        validateInfo: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Projects, \"IiY1jqU8QNvYgN5OMiDeu6uQNr8=\");\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/mnt/c/Users/Venkatesh/Documents/6th Sem/Web Dev/project/resume-generator/src/components/Projects/Projects.jsx"],"names":["React","Project","NavButtons","Projects","props","step","setStep","numberOfExps","value","title","link","desc","error","errorMessage","values","setValues","useState","p1","p2","p3","p4","errors","setErrors","errorMessages","setErrorMessages","isValidated","setIsValidated","handleNext","flag","Object","includes","useEffect","onChange","id","validateInfo","pro","newError","newErrorMessage","key","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Project from \"./Project.jsx\";\r\nimport NavButtons from \"../NavButtons/NavButtons.jsx\";\r\n\r\nconst Projects = (props) => {\r\n  const { step, setStep, numberOfExps } = props;\r\n  const value = {\r\n    title: \"\",\r\n    link: \"\",\r\n    desc: \"\",\r\n  };\r\n  const error = {\r\n    title: false,\r\n    link: false,\r\n    desc: false,\r\n  };\r\n  const errorMessage = {\r\n    title: \"\",\r\n    link: \"\",\r\n    desc: \"\",\r\n  };\r\n\r\n  const [values, setValues] = React.useState({\r\n    p1: { ...value },\r\n    p2: { ...value },\r\n    p3: { ...value },\r\n    p4: { ...value },\r\n  });\r\n  const [errors, setErrors] = React.useState({\r\n    p1: { ...error },\r\n    p2: { ...error },\r\n    p3: { ...error },\r\n    p4: { ...error },\r\n  });\r\n  const [errorMessages, setErrorMessages] = React.useState({\r\n    p1: { ...errorMessage },\r\n    p2: { ...errorMessage },\r\n    p3: { ...errorMessage },\r\n    p4: { ...errorMessage },\r\n  });\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n\r\n  const handleNext = () => {\r\n    let flag = false;\r\n    for (let error of Object.values(errors)) {\r\n      if (Object.values(error).includes(true)) {\r\n        flag = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!flag) setStep(step + 1);\r\n  };\r\n  React.useEffect(() => {\r\n    if (isValidated) handleNext();\r\n  }, [isValidated, handleNext]);\r\n\r\n  if (numberOfExps === 0) {\r\n    const onChange = (id, value) => {\r\n      values[id] = value;\r\n      setValues({ ...values });\r\n    };\r\n    const validateInfo = () => {\r\n      setIsValidated(false);\r\n\r\n      for (let pro in values) {\r\n        let newError = {\r\n          title: true,\r\n          link: true,\r\n          desc: true,\r\n        };\r\n        let newErrorMessage = {\r\n          title: \"Please provide complete info for this project!\",\r\n          link: \"Please provide complete info for this project!\",\r\n          desc: \"Please provide complete info for this project!\",\r\n        };\r\n\r\n        let flag = false;\r\n        for (let key in values[pro]) {\r\n          if (values[pro][key].length) {\r\n            flag = true;\r\n            newError[key] = false;\r\n            newErrorMessage[key] = \"\";\r\n          }\r\n        }\r\n\r\n        if (!flag) {\r\n          newError = {\r\n            title: false,\r\n            link: false,\r\n            desc: false,\r\n          };\r\n          newErrorMessage = {\r\n            title: \"\",\r\n            link: \"\",\r\n            desc: \"\",\r\n          };\r\n        }\r\n        errors[pro] = newError;\r\n        errorMessages[pro] = newErrorMessage;\r\n      }\r\n\r\n      setErrors({ ...errors });\r\n      setErrorMessages({ ...errorMessages });\r\n      setIsValidated(true);\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h3>\r\n          As you haven't entered any experiences, please provoide at least 2\r\n          projects below\r\n        </h3>\r\n        <Project\r\n          id=\"p1\"\r\n          onChange={onChange}\r\n          values={values[\"p1\"]}\r\n          errors={errors[\"p1\"]}\r\n          errorMessages={errorMessages[\"p1\"]}\r\n        />\r\n        <Project\r\n          id=\"p2\"\r\n          onChange={onChange}\r\n          values={values[\"p2\"]}\r\n          errors={errors[\"p2\"]}\r\n          errorMessages={errorMessages[\"p2\"]}\r\n        />\r\n        <Project\r\n          id=\"p3\"\r\n          onChange={onChange}\r\n          values={values[\"p3\"]}\r\n          errors={errors[\"p3\"]}\r\n          errorMessages={errorMessages[\"p3\"]}\r\n        />\r\n        <Project\r\n          id=\"p4\"\r\n          onChange={onChange}\r\n          values={values[\"p4\"]}\r\n          errors={errors[\"p4\"]}\r\n          errorMessages={errorMessages[\"p4\"]}\r\n        />\r\n        <NavButtons {...props} validateInfo={validateInfo} />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <NavButtons {...props} validateInfo={() => {}} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Projects;\r\n"]},"metadata":{},"sourceType":"module"}