{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Venkatesh/Documents/6th Sem/Web Dev/project/resume-generator/src/components/NavButtons/NavButtons.jsx\",\n    _s = $RefreshSig$();\n\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./NavButtons.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavButtons = props => {\n  _s();\n\n  const {\n    step,\n    setStep,\n    maxSteps,\n    validateInfo\n  } = props;\n  const useStyles = makeStyles(theme => ({\n    root: {\n      width: \"100%\"\n    },\n    button: {\n      marginRight: theme.spacing(1)\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n      float: \"right\"\n    }\n  }));\n  const classes = useStyles();\n\n  const handleBack = () => setStep(step - 1);\n\n  const handleReset = () => setStep(0);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"buttons\",\n    children: step === maxSteps - 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleReset,\n        className: \"normal-button\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleBack,\n        className: \"normal-button\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.instructions,\n        children: \"All steps completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.instructions,\n        children: \"you're done!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleReset,\n        className: \"normal-button\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: step === 0,\n        onClick: handleBack,\n        className: \"normal-button\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: validateInfo,\n        className: \"highlighted-button\",\n        children: step === maxSteps - 2 ? \"Finish\" : \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavButtons, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", true);\n\n_c = NavButtons;\nexport default NavButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavButtons\");","map":{"version":3,"sources":["/mnt/c/Users/Venkatesh/Documents/6th Sem/Web Dev/project/resume-generator/src/components/NavButtons/NavButtons.jsx"],"names":["Button","Typography","makeStyles","NavButtons","props","step","setStep","maxSteps","validateInfo","useStyles","theme","root","width","button","marginRight","spacing","instructions","marginTop","marginBottom","float","classes","handleBack","handleReset"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA;AAA3B,MAA4CJ,KAAlD;AACA,QAAMK,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE;AADH,KADiC;AAIvCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,WAAW,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADP,KAJ+B;AAOvCC,IAAAA,YAAY,EAAE;AACZC,MAAAA,SAAS,EAAEP,KAAK,CAACK,OAAN,CAAc,CAAd,CADC;AAEZG,MAAAA,YAAY,EAAER,KAAK,CAACK,OAAN,CAAc,CAAd,CAFF;AAGZI,MAAAA,KAAK,EAAE;AAHK;AAPyB,GAAZ,CAAD,CAA5B;AAaA,QAAMC,OAAO,GAAGX,SAAS,EAAzB;;AAEA,QAAMY,UAAU,GAAG,MAAMf,OAAO,CAACD,IAAI,GAAG,CAAR,CAAhC;;AACA,QAAMiB,WAAW,GAAG,MAAMhB,OAAO,CAAC,CAAD,CAAjC;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,cACGD,IAAI,KAAKE,QAAQ,GAAG,CAApB,gBACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEe,WAAjB;AAA8B,QAAA,SAAS,EAAC,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAED,UAAjB;AAA6B,QAAA,SAAS,EAAC,eAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAED,OAAO,CAACJ,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAEI,OAAO,CAACJ,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBA0BC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEM,WAAjB;AAA8B,QAAA,SAAS,EAAC,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AACE,QAAA,QAAQ,EAAEjB,IAAI,KAAK,CADrB;AAEE,QAAA,OAAO,EAAEgB,UAFX;AAGE,QAAA,SAAS,EAAC,eAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAWE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAEb,YAHX;AAIE,QAAA,SAAS,EAAC,oBAJZ;AAAA,kBAMGH,IAAI,KAAKE,QAAQ,GAAG,CAApB,GAAwB,QAAxB,GAAmC;AANtC;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmDD,CAvED;;GAAMJ,U;;KAAAA,U;AAyEN,eAAeA,UAAf","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./NavButtons.css\";\n\nconst NavButtons = (props) => {\n  const { step, setStep, maxSteps, validateInfo } = props;\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: \"100%\",\n    },\n    button: {\n      marginRight: theme.spacing(1),\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n      float: \"right\",\n    },\n  }));\n  const classes = useStyles();\n\n  const handleBack = () => setStep(step - 1);\n  const handleReset = () => setStep(0);\n\n  return (\n    <div className=\"buttons\">\n      {step === maxSteps - 1 ? (\n        <div className=\"buttons\">\n          <Button onClick={handleReset} className=\"normal-button\">\n            Reset\n          </Button>\n          <Button onClick={handleBack} className=\"normal-button\">\n            Back\n          </Button>\n          <Typography className={classes.instructions}>\n            All steps completed\n          </Typography>\n          <Typography className={classes.instructions}>\n            you&apos;re done!!\n          </Typography>\n          {/* <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              handleDownload(resume);\n            }}\n            className=\"highlighted-button\"\n          >\n            Download\n          </Button> */}\n        </div>\n      ) : (\n        <div className=\"buttons\">\n          <Button onClick={handleReset} className=\"normal-button\">\n            Reset\n          </Button>\n          <Button\n            disabled={step === 0}\n            onClick={handleBack}\n            className=\"normal-button\"\n          >\n            Back\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={validateInfo}\n            className=\"highlighted-button\"\n          >\n            {step === maxSteps - 2 ? \"Finish\" : \"Next\"}\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NavButtons;\n"]},"metadata":{},"sourceType":"module"}