{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Venkatesh/Documents/6th Sem/Web Dev/project/resume-generator/src/components/Experiences/Experiences.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport NavButtons from \"../NavButtons/NavButtons.jsx\";\nimport Experience from \"./Experience.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Experiences = props => {\n  _s();\n\n  const value = {\n    job: \"\",\n    role: \"\",\n    from: \"\",\n    to: \"\",\n    desc: \"\"\n  };\n  const error = {\n    job: false,\n    role: false,\n    from: false,\n    to: false,\n    desc: false\n  };\n  const errorMessage = {\n    job: \"\",\n    role: \"\",\n    from: \"\",\n    to: \"\",\n    desc: \"\"\n  };\n  const [values, setValues] = React.useState({\n    e1: { ...value\n    },\n    e2: { ...value\n    },\n    e3: { ...value\n    },\n    e4: { ...value\n    }\n  });\n  const [errors, setErrors] = React.useState({\n    e1: { ...error\n    },\n    e2: { ...error\n    },\n    e3: { ...error\n    },\n    e4: { ...error\n    }\n  });\n  const [errorMessages, setErrorMessages] = React.useState({\n    e1: { ...errorMessage\n    },\n    e2: { ...errorMessage\n    },\n    e3: { ...errorMessage\n    },\n    e4: { ...errorMessage\n    }\n  });\n\n  const onChange = (id, value) => {\n    values[id] = value;\n    setValues({ ...values\n    });\n  };\n\n  const validateInfo = () => {\n    for (let exp in values) {\n      const newError = {\n        job: true,\n        role: true,\n        from: true,\n        to: true,\n        desc: false\n      };\n      const newErrorMessage = {\n        job: \"Please provide complete info for this experience!\",\n        role: \"Please provide complete info for this experience!\",\n        from: \"Please provide complete info for this experience!\",\n        to: \"Please provide complete info for this experience!\",\n        desc: \"Please provide complete info for this experience!\"\n      };\n\n      for (let key in values[exp]) {\n        if (values[exp][key].length) {\n          newError[key] = false;\n          newErrorMessage[key] = \"\";\n        }\n      }\n\n      errors[exp] = newError;\n      errorMessages[exp] = newErrorMessage;\n    }\n\n    setErrors({ ...errors\n    });\n    setErrorMessages({ ...errorMessages\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Experience, {\n      id: \"e1\",\n      onChange: onChange,\n      values: values[\"e1\"],\n      errors: errors[\"e1\"],\n      errorMessages: errorMessages[\"e1\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Experience, {\n      id: \"e2\",\n      onChange: onChange,\n      values: values[\"e2\"],\n      errors: errors[\"e2\"],\n      errorMessages: errorMessages[\"e2\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Experience, {\n      id: \"e3\",\n      onChange: onChange,\n      values: values[\"e3\"],\n      errors: errors[\"e3\"],\n      errorMessages: errorMessages[\"e3\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Experience, {\n      id: \"e4\",\n      onChange: onChange,\n      values: values[\"e4\"],\n      errors: errors[\"e4\"],\n      errorMessages: errorMessages[\"e4\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavButtons, { ...props,\n      validateInfo: validateInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Experiences, \"dgqXTgXZC0vadNzfMcBxPhzGkCI=\");\n\n_c = Experiences;\nexport default Experiences;\n\nvar _c;\n\n$RefreshReg$(_c, \"Experiences\");","map":{"version":3,"sources":["/mnt/c/Users/Venkatesh/Documents/6th Sem/Web Dev/project/resume-generator/src/components/Experiences/Experiences.jsx"],"names":["React","NavButtons","Experience","Experiences","props","value","job","role","from","to","desc","error","errorMessage","values","setValues","useState","e1","e2","e3","e4","errors","setErrors","errorMessages","setErrorMessages","onChange","id","validateInfo","exp","newError","newErrorMessage","key","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NavButtons from \"../NavButtons/NavButtons.jsx\";\nimport Experience from \"./Experience.jsx\";\n\nconst Experiences = (props) => {\n  const value = {\n    job: \"\",\n    role: \"\",\n    from: \"\",\n    to: \"\",\n    desc: \"\",\n  };\n  const error = {\n    job: false,\n    role: false,\n    from: false,\n    to: false,\n    desc: false,\n  };\n  const errorMessage = {\n    job: \"\",\n    role: \"\",\n    from: \"\",\n    to: \"\",\n    desc: \"\",\n  };\n  const [values, setValues] = React.useState({\n    e1: { ...value },\n    e2: { ...value },\n    e3: { ...value },\n    e4: { ...value },\n  });\n  const [errors, setErrors] = React.useState({\n    e1: { ...error },\n    e2: { ...error },\n    e3: { ...error },\n    e4: { ...error },\n  });\n  const [errorMessages, setErrorMessages] = React.useState({\n    e1: { ...errorMessage },\n    e2: { ...errorMessage },\n    e3: { ...errorMessage },\n    e4: { ...errorMessage },\n  });\n\n  const onChange = (id, value) => {\n    values[id] = value;\n    setValues({ ...values });\n  };\n  const validateInfo = () => {\n    for (let exp in values) {\n      const newError = {\n        job: true,\n        role: true,\n        from: true,\n        to: true,\n        desc: false,\n      };\n      const newErrorMessage = {\n        job: \"Please provide complete info for this experience!\",\n        role: \"Please provide complete info for this experience!\",\n        from: \"Please provide complete info for this experience!\",\n        to: \"Please provide complete info for this experience!\",\n        desc: \"Please provide complete info for this experience!\",\n      };\n\n      for (let key in values[exp]) {\n        if (values[exp][key].length) {\n          newError[key] = false;\n          newErrorMessage[key] = \"\";\n        }\n      }\n\n      errors[exp] = newError;\n      errorMessages[exp] = newErrorMessage;\n    }\n\n    setErrors({ ...errors });\n    setErrorMessages({ ...errorMessages });\n  };\n\n  return (\n    <div>\n      <Experience\n        id=\"e1\"\n        onChange={onChange}\n        values={values[\"e1\"]}\n        errors={errors[\"e1\"]}\n        errorMessages={errorMessages[\"e1\"]}\n      />\n      <Experience\n        id=\"e2\"\n        onChange={onChange}\n        values={values[\"e2\"]}\n        errors={errors[\"e2\"]}\n        errorMessages={errorMessages[\"e2\"]}\n      />\n      <Experience\n        id=\"e3\"\n        onChange={onChange}\n        values={values[\"e3\"]}\n        errors={errors[\"e3\"]}\n        errorMessages={errorMessages[\"e3\"]}\n      />\n      <Experience\n        id=\"e4\"\n        onChange={onChange}\n        values={values[\"e4\"]}\n        errors={errors[\"e4\"]}\n        errorMessages={errorMessages[\"e4\"]}\n      />\n      <NavButtons {...props} validateInfo={validateInfo} />\n    </div>\n  );\n};\n\nexport default Experiences;\n"]},"metadata":{},"sourceType":"module"}