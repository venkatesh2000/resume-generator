{"ast":null,"code":"'use strict';\n\nconst PDF = require('../object');\n\nconst Parser = require('../parser/parser');\n\nmodule.exports = class PDFImage {\n  constructor(src) {\n    const parser = new Parser(src);\n    parser.parse();\n    const catalog = parser.trailer.get('Root').object.properties;\n    const pages = catalog.get('Pages').object.properties;\n    const first = pages.get('Kids')[0].object.properties;\n    const mediaBox = first.get('MediaBox') || pages.get('MediaBox');\n    this.page = first;\n    this.width = mediaBox[2];\n    this.height = mediaBox[3];\n    const contents = this.page.get('Contents');\n    this.xobjCount = Array.isArray(contents) ? contents.length : 1;\n  }\n\n  async write(doc, xobjs) {\n    const resources = this.page.get('Resources');\n    const bbox = new PDF.Array([0, 0, this.width, this.height]);\n\n    for (let i = 0; i < this.xobjCount; ++i) {\n      const xobj = xobjs[i];\n      xobj.prop('Subtype', 'Form');\n      xobj.prop('FormType', 1);\n      xobj.prop('BBox', bbox);\n      xobj.prop('Resources', resources instanceof PDF.Object ? resources.toReference() : resources);\n      let contents = this.page.get('Contents');\n\n      if (Array.isArray(contents)) {\n        contents = contents[i].object;\n      } else {\n        contents = contents.object;\n      }\n\n      const content = new PDF.Stream(xobj);\n      content.content = contents.content.content;\n\n      if (contents.properties.has('Filter')) {\n        xobj.prop('Filter', contents.properties.get('Filter'));\n      }\n\n      xobj.prop('Length', contents.properties.get('Length'));\n\n      if (contents.properties.has('Length1')) {\n        xobj.prop('Length1', contents.properties.get('Length1'));\n      }\n\n      const objects = [];\n      Parser.addObjectsRecursive(objects, xobj); // first, register objects to assign IDs (for references)\n\n      for (const obj of objects) {\n        doc._registerObject(obj, true);\n      } // write objects\n\n\n      for (const obj of objects) {\n        await doc._writeObject(obj);\n      }\n\n      await doc._writeObject(xobj);\n    }\n  }\n\n};","map":{"version":3,"sources":["/mnt/c/Users/Venkatesh/Documents/6th Sem/Web Dev/project/resume-generator/node_modules/pdfjs/lib/image/pdf.js"],"names":["PDF","require","Parser","module","exports","PDFImage","constructor","src","parser","parse","catalog","trailer","get","object","properties","pages","first","mediaBox","page","width","height","contents","xobjCount","Array","isArray","length","write","doc","xobjs","resources","bbox","i","xobj","prop","Object","toReference","content","Stream","has","objects","addObjectsRecursive","obj","_registerObject","_writeObject"],"mappings":"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","sourcesContent":["'use strict'\n\nconst PDF = require('../object')\nconst Parser = require('../parser/parser')\n\nmodule.exports = class PDFImage {\n  constructor(src) {\n    const parser = new Parser(src)\n    parser.parse()\n\n    const catalog  = parser.trailer.get('Root').object.properties\n    const pages    = catalog.get('Pages').object.properties\n    const first    = pages.get('Kids')[0].object.properties\n    const mediaBox = first.get('MediaBox') || pages.get('MediaBox')\n\n    this.page = first\n    this.width = mediaBox[2]\n    this.height = mediaBox[3]\n\n    const contents = this.page.get('Contents')\n    this.xobjCount = Array.isArray(contents) ? contents.length : 1\n  }\n\n  async write(doc, xobjs) {\n    const resources = this.page.get('Resources')\n    const bbox = new PDF.Array([0, 0, this.width, this.height])\n\n    for (let i = 0; i < this.xobjCount; ++i) {\n      const xobj = xobjs[i]\n\n      xobj.prop('Subtype', 'Form')\n      xobj.prop('FormType', 1)\n      xobj.prop('BBox', bbox)\n      xobj.prop('Resources', resources instanceof PDF.Object ? resources.toReference() : resources)\n\n      let contents = this.page.get('Contents')\n      if (Array.isArray(contents)) {\n        contents = contents[i].object\n      } else {\n        contents = contents.object\n      }\n\n      const content = new PDF.Stream(xobj)\n      content.content = contents.content.content\n\n      if (contents.properties.has('Filter')) {\n        xobj.prop('Filter', contents.properties.get('Filter'))\n      }\n      xobj.prop('Length',  contents.properties.get('Length'))\n      if (contents.properties.has('Length1')) {\n        xobj.prop('Length1', contents.properties.get('Length1'))\n      }\n\n      const objects = []\n      Parser.addObjectsRecursive(objects, xobj)\n\n      // first, register objects to assign IDs (for references)\n      for (const obj of objects) {\n        doc._registerObject(obj, true)\n      }\n\n      // write objects\n      for (const obj of objects) {\n        await doc._writeObject(obj)\n      }\n\n      await doc._writeObject(xobj)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}