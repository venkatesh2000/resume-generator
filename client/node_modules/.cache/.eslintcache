[{"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\index.js":"1","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\App.jsx":"2","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\sample-resumes\\1.js":"3","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\PersonalInfo\\PersonalInfo.jsx":"4","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\Skills\\Skills.jsx":"5","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\Education\\Education.jsx":"6","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\Experiences\\Experiences.jsx":"7","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\Projects\\Projects.jsx":"8","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\Preview\\Preview.jsx":"9","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\HorizontalLinearStepper\\HorizontalLinearStepper.jsx":"10","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\navBar\\NavBar.jsx":"11","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\Experiences\\Experience.jsx":"12","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\Projects\\Project.jsx":"13","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\pages\\homePage\\Home.jsx":"14","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\pages\\login\\Login.jsx":"15","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\pages\\signup\\SignUp.jsx":"16","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\NavButtons\\NavButtons.jsx":"17","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\pages\\information\\Information.jsx":"18"},{"size":234,"mtime":1625299034238,"results":"19","hashOfConfig":"20"},{"size":4362,"mtime":1625300972738,"results":"21","hashOfConfig":"20"},{"size":16746,"mtime":1625299034249,"results":"22","hashOfConfig":"20"},{"size":5904,"mtime":1625299034227,"results":"23","hashOfConfig":"20"},{"size":5290,"mtime":1625299034232,"results":"24","hashOfConfig":"20"},{"size":4983,"mtime":1625299034218,"results":"25","hashOfConfig":"20"},{"size":4016,"mtime":1625299034220,"results":"26","hashOfConfig":"20"},{"size":7514,"mtime":1625299034231,"results":"27","hashOfConfig":"20"},{"size":469,"mtime":1625299034228,"results":"28","hashOfConfig":"20"},{"size":1360,"mtime":1625299034222,"results":"29","hashOfConfig":"20"},{"size":1566,"mtime":1625299199636,"results":"30","hashOfConfig":"20"},{"size":2498,"mtime":1625299034219,"results":"31","hashOfConfig":"20"},{"size":1864,"mtime":1625299034230,"results":"32","hashOfConfig":"20"},{"size":1476,"mtime":1625299871538,"results":"33","hashOfConfig":"20"},{"size":746,"mtime":1625299034242,"results":"34","hashOfConfig":"20"},{"size":844,"mtime":1625299034245,"results":"35","hashOfConfig":"20"},{"size":1713,"mtime":1625299034225,"results":"36","hashOfConfig":"20"},{"size":897,"mtime":1625300872081,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"vwzx8b",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\index.js",[],["79","80"],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\App.jsx",["81"],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\sample-resumes\\1.js",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\PersonalInfo\\PersonalInfo.jsx",["82","83","84"],"import \"./PersonalInfo.css\";\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NavButtons from \"../NavButtons/NavButtons.jsx\";\r\n\r\nconst PersonalInfo = (props) => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \"& > *\": {\r\n        marginTop: theme.spacing(2),\r\n        width: \"75ch\",\r\n      },\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const { resume, setResume, step, setStep } = props;\r\n  const [values, setValues] = React.useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    pno: \"\",\r\n    github: \"\",\r\n    linkedin: \"\",\r\n    website: \"\",\r\n  });\r\n  const [errors, setErrors] = React.useState({\r\n    name: false,\r\n    email: false,\r\n    pno: false,\r\n    github: false,\r\n    linkedin: false,\r\n    website: false,\r\n  });\r\n  const [errorMessages, setErrorMessages] = React.useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    pno: \"\",\r\n    github: \"\",\r\n    linkedin: \"\",\r\n    website: \"\",\r\n  });\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n\r\n  const onValueChange = (key, event) => {\r\n    values[key] = event.target.value;\r\n    setValues({ ...values });\r\n  };\r\n  const validateInfo = () => {\r\n    const emailRegex =\r\n      /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    const urlRegex =\r\n      /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/;\r\n\r\n    setIsValidated(false);\r\n\r\n    const newErrors = {\r\n      name: false,\r\n      email: false,\r\n      pno: false,\r\n      github: false,\r\n      linkedin: false,\r\n      website: false,\r\n    };\r\n    const newErrorMessages = {\r\n      name: \"\",\r\n      email: \"\",\r\n      pno: \"\",\r\n      github: \"\",\r\n      linkedin: \"\",\r\n      website: \"\",\r\n    };\r\n    if (!values.name.length) {\r\n      newErrors[\"name\"] = true;\r\n      newErrorMessages[\"name\"] = \"This is a required field!\";\r\n    }\r\n    if (!values.pno.length) {\r\n      newErrors[\"pno\"] = true;\r\n      newErrorMessages[\"pno\"] = \"This is a required field!\";\r\n    }\r\n    if (!values.email.length) {\r\n      newErrors[\"email\"] = true;\r\n      newErrorMessages[\"email\"] = \"This is a required field!\";\r\n    }\r\n    if (values.email.length && !emailRegex.test(values.email)) {\r\n      newErrors[\"email\"] = true;\r\n      newErrorMessages[\"email\"] = \"Please enter a valid email address!\";\r\n    }\r\n    if (values.github.length && !urlRegex.test(values.github)) {\r\n      newErrors[\"github\"] = true;\r\n      newErrorMessages[\"github\"] = \"Please enter a valid URL!\";\r\n    }\r\n    if (values.linkedin.length && !urlRegex.test(values.linkedin)) {\r\n      newErrors[\"linkedin\"] = true;\r\n      newErrorMessages[\"linkedin\"] = \"Please enter a valid URL!\";\r\n    }\r\n    if (values.website.length && !urlRegex.test(values.website)) {\r\n      newErrors[\"website\"] = true;\r\n      newErrorMessages[\"website\"] = \"Please enter a valid URL!\";\r\n    }\r\n\r\n    setErrors({ ...newErrors });\r\n    setErrorMessages({ ...newErrorMessages });\r\n    setIsValidated(true);\r\n  };\r\n  const handleNext = () => {\r\n    if (!Object.values(errors).includes(true)) {\r\n      setResume({ ...resume, ...values })\r\n      setStep(step + 1);\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    if (isValidated) handleNext();\r\n  }, [isValidated, handleNext]);\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"card\">\r\n        <CardContent>\r\n          <form className={classes.root} autoComplete=\"on\">\r\n            <TextField\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.name}\r\n              onChange={(event) => onValueChange(\"name\", event)}\r\n              error={errors.name}\r\n              helperText={errors.name && errorMessages.name}\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"E-mail\"\r\n              variant=\"outlined\"\r\n              value={values.email}\r\n              onChange={(event) => onValueChange(\"email\", event)}\r\n              error={errors.email}\r\n              helperText={errors.email && errorMessages.email}\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"Phone Number\"\r\n              variant=\"outlined\"\r\n              value={values.pno}\r\n              onChange={(event) => onValueChange(\"pno\", event)}\r\n              error={errors.pno}\r\n              helperText={errors.pno && errorMessages.pno}\r\n              required\r\n            />\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card className=\"card\">\r\n        <CardContent>\r\n          <form className={classes.root} autoComplete=\"on\">\r\n            <TextField\r\n              label=\"GitHub URL\"\r\n              variant=\"outlined\"\r\n              value={values.github}\r\n              onChange={(event) => onValueChange(\"github\", event)}\r\n              error={errors.github}\r\n              helperText={errors.github && errorMessages.github}\r\n            />\r\n            <TextField\r\n              label=\"LinkedIn URL\"\r\n              variant=\"outlined\"\r\n              value={values.linkedin}\r\n              onChange={(event) => onValueChange(\"linkedin\", event)}\r\n              error={errors.linkedin}\r\n              helperText={errors.linkedin && errorMessages.linkedin}\r\n            />\r\n            <TextField\r\n              label=\"Website URL\"\r\n              variant=\"outlined\"\r\n              value={values.website}\r\n              onChange={(event) => onValueChange(\"website\", event)}\r\n              error={errors.website}\r\n              helperText={errors.website && errorMessages.website}\r\n            />\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <NavButtons {...props} validateInfo={validateInfo} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalInfo;\r\n","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\Skills\\Skills.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\Education\\Education.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\Experiences\\Experiences.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\Projects\\Projects.jsx",["85"],"import React from \"react\";\r\nimport Project from \"./Project.jsx\";\r\nimport NavButtons from \"../NavButtons/NavButtons.jsx\";\r\n\r\nconst Projects = (props) => {\r\n  const { resume, setResume, step, setStep, numberOfExps } = props;\r\n  const value = {\r\n    title: \"\",\r\n    link: \"\",\r\n    desc: \"\",\r\n  };\r\n  const error = {\r\n    title: false,\r\n    link: false,\r\n    desc: false,\r\n  };\r\n  const errorMessage = {\r\n    title: \"\",\r\n    link: \"\",\r\n    desc: \"\",\r\n  };\r\n\r\n  const [values, setValues] = React.useState({\r\n    p1: { ...value },\r\n    p2: { ...value },\r\n    p3: { ...value },\r\n    p4: { ...value },\r\n  });\r\n  const [errors, setErrors] = React.useState({\r\n    p1: { ...error },\r\n    p2: { ...error },\r\n    p3: { ...error },\r\n    p4: { ...error },\r\n  });\r\n  const [errorMessages, setErrorMessages] = React.useState({\r\n    p1: { ...errorMessage },\r\n    p2: { ...errorMessage },\r\n    p3: { ...errorMessage },\r\n    p4: { ...errorMessage },\r\n  });\r\n  const [projects, setProjects] = React.useState(0);\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n\r\n  const onChange = (id, value) => {\r\n    values[id] = value;\r\n    setValues({ ...values });\r\n  };\r\n  const validateInfo = () => {\r\n    setIsValidated(false);\r\n\r\n    let currProjects = 0;\r\n    for (let pro in values) {\r\n      let newError = {\r\n        title: true,\r\n        link: true,\r\n        desc: true,\r\n      };\r\n      let newErrorMessage = {\r\n        title: \"Please provide complete info for this project!\",\r\n        link: \"Please provide complete info for this project!\",\r\n        desc: \"Please provide complete info for this project!\",\r\n      };\r\n\r\n      let flag = false,\r\n        count = 0;\r\n      for (let key in values[pro]) {\r\n        if (values[pro][key].length) {\r\n          flag = true;\r\n          ++count;\r\n          newError[key] = false;\r\n          newErrorMessage[key] = \"\";\r\n        }\r\n      }\r\n\r\n      if (count === 3) ++currProjects;\r\n      if (!flag) {\r\n        newError = {\r\n          title: false,\r\n          link: false,\r\n          desc: false,\r\n        };\r\n        newErrorMessage = {\r\n          title: \"\",\r\n          link: \"\",\r\n          desc: \"\",\r\n        };\r\n      }\r\n      errors[pro] = newError;\r\n      errorMessages[pro] = newErrorMessage;\r\n    }\r\n\r\n    setProjects(currProjects);\r\n    setErrors({ ...errors });\r\n    setErrorMessages({ ...errorMessages });\r\n    setIsValidated(true);\r\n  };\r\n  const handleNext = () => {\r\n    let flag = false;\r\n    for (let error of Object.values(errors)) {\r\n      if (Object.values(error).includes(true)) {\r\n        flag = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    let minProjects = 0;\r\n    if (numberOfExps === 0) minProjects = 2;\r\n    else if (numberOfExps === 1) minProjects = 1;\r\n    else minProjects = 0;\r\n\r\n    if (!flag && projects >= minProjects) {\r\n      setResume({ ...resume, ...values });\r\n      setStep(step + 1);\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    if (isValidated) handleNext();\r\n  });\r\n  const InitWhenExpIsOne = () => {\r\n    const newValues = {\r\n      p1: { ...value },\r\n      p2: { ...value },\r\n      p3: { ...value },\r\n    };\r\n    const newErrors = {\r\n      p1: { ...error },\r\n      p2: { ...error },\r\n      p3: { ...error },\r\n    };\r\n    const newErrorMessages = {\r\n      p1: { ...errorMessage },\r\n      p2: { ...errorMessage },\r\n      p3: { ...errorMessage },\r\n    };\r\n    setValues({ ...newValues });\r\n    setErrors({ ...newErrors });\r\n    setErrorMessages({ ...newErrorMessages });\r\n  };\r\n  const InitWhenExpIsTwo = () => {\r\n    const newValues = {\r\n      p1: { ...value },\r\n      p2: { ...value },\r\n    };\r\n    const newErrors = {\r\n      p1: { ...error },\r\n      p2: { ...error },\r\n    };\r\n    const newErrorMessages = {\r\n      p1: { ...errorMessage },\r\n      p2: { ...errorMessage },\r\n    };\r\n    setValues({ ...newValues });\r\n    setErrors({ ...newErrors });\r\n    setErrorMessages({ ...newErrorMessages });\r\n  };\r\n  const InitWhenExpIsThree = () => {\r\n    const newValues = {\r\n      p1: { ...value },\r\n    };\r\n    const newErrors = {\r\n      p1: { ...error },\r\n    };\r\n    const newErrorMessages = {\r\n      p1: { ...errorMessage },\r\n    };\r\n    setValues({ ...newValues });\r\n    setErrors({ ...newErrors });\r\n    setErrorMessages({ ...newErrorMessages });\r\n  };\r\n  React.useEffect(() => {\r\n    if (numberOfExps === 1) InitWhenExpIsOne();\r\n    else if (numberOfExps === 2) InitWhenExpIsTwo();\r\n    else if (numberOfExps === 3) InitWhenExpIsThree();\r\n  }, []);\r\n\r\n  if (numberOfExps === 0) {\r\n    return (\r\n      <div>\r\n        <h3>\r\n          As you haven't entered any experiences, please provide at least 2\r\n          projects below\r\n        </h3>\r\n        <Project\r\n          id=\"p1\"\r\n          onChange={onChange}\r\n          values={values[\"p1\"]}\r\n          errors={errors[\"p1\"]}\r\n          errorMessages={errorMessages[\"p1\"]}\r\n        />\r\n        <Project\r\n          id=\"p2\"\r\n          onChange={onChange}\r\n          values={values[\"p2\"]}\r\n          errors={errors[\"p2\"]}\r\n          errorMessages={errorMessages[\"p2\"]}\r\n        />\r\n        <Project\r\n          id=\"p3\"\r\n          onChange={onChange}\r\n          values={values[\"p3\"]}\r\n          errors={errors[\"p3\"]}\r\n          errorMessages={errorMessages[\"p3\"]}\r\n        />\r\n        <Project\r\n          id=\"p4\"\r\n          onChange={onChange}\r\n          values={values[\"p4\"]}\r\n          errors={errors[\"p4\"]}\r\n          errorMessages={errorMessages[\"p4\"]}\r\n        />\r\n        <NavButtons {...props} validateInfo={validateInfo} />\r\n      </div>\r\n    );\r\n  } else if (numberOfExps === 1) {\r\n    return (\r\n      <div>\r\n        <h3>\r\n          As you have entered only 1 experience, please provide at least 1\r\n          project below\r\n        </h3>\r\n        <Project\r\n          id=\"p1\"\r\n          onChange={onChange}\r\n          values={values[\"p1\"]}\r\n          errors={errors[\"p1\"]}\r\n          errorMessages={errorMessages[\"p1\"]}\r\n        />\r\n        <Project\r\n          id=\"p2\"\r\n          onChange={onChange}\r\n          values={values[\"p2\"]}\r\n          errors={errors[\"p2\"]}\r\n          errorMessages={errorMessages[\"p2\"]}\r\n        />\r\n        <Project\r\n          id=\"p3\"\r\n          onChange={onChange}\r\n          values={values[\"p3\"]}\r\n          errors={errors[\"p3\"]}\r\n          errorMessages={errorMessages[\"p3\"]}\r\n        />\r\n        <NavButtons {...props} validateInfo={validateInfo} />\r\n      </div>\r\n    );\r\n  } else if (numberOfExps === 2) {\r\n    return (\r\n      <div>\r\n        <Project\r\n          id=\"p1\"\r\n          onChange={onChange}\r\n          values={values[\"p1\"]}\r\n          errors={errors[\"p1\"]}\r\n          errorMessages={errorMessages[\"p1\"]}\r\n        />\r\n        <Project\r\n          id=\"p2\"\r\n          onChange={onChange}\r\n          values={values[\"p2\"]}\r\n          errors={errors[\"p2\"]}\r\n          errorMessages={errorMessages[\"p2\"]}\r\n        />\r\n        <NavButtons {...props} validateInfo={validateInfo} />\r\n      </div>\r\n    );\r\n  } else if (numberOfExps === 3) {\r\n    return (\r\n      <div>\r\n        <Project\r\n          id=\"p1\"\r\n          onChange={onChange}\r\n          values={values[\"p1\"]}\r\n          errors={errors[\"p1\"]}\r\n          errorMessages={errorMessages[\"p1\"]}\r\n        />\r\n        <NavButtons {...props} validateInfo={validateInfo} />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h3>\r\n          As you have entered 4 experiences, there is no need for projects\r\n        </h3>\r\n        <h4>Please move to the next step</h4>\r\n        <NavButtons {...props} validateInfo={validateInfo} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Projects;\r\n","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\Preview\\Preview.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\HorizontalLinearStepper\\HorizontalLinearStepper.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\navBar\\NavBar.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\Experiences\\Experience.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\Projects\\Project.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\pages\\homePage\\Home.jsx",["86"],"import React from \"react\";\r\nimport \"./home.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"imageDiv\">\r\n        <img\r\n          className=\"homeImage\"\r\n          src=\"https://images.pexels.com/photos/590016/pexels-photo-590016.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          alt=\"home image\"\r\n        />\r\n      </div>\r\n      <div className=\"statement\">\r\n        <h2 className=\"bigStatement\">\r\n          \" Only 2% of resumes make it past the first round. Be in the top 2%. \"\r\n        </h2>\r\n        <h4 className=\"smallStatement\">\r\n          Save your time and effort with this easy to use Resume Builder to\r\n          build your custom style professional resume and apply for your dream\r\n          job in easy and fast in just three easy steps.\r\n        </h4>\r\n        <div className=\"steps\">\r\n          <h3>1. Enter your information</h3>\r\n          <i class=\"fas fa-arrow-down\"></i>\r\n          <h3>2. Choose your template</h3>\r\n          <i class=\"fas fa-arrow-down\"></i>\r\n          <h3>3. Download your Resume</h3>\r\n        </div>\r\n        <Link\r\n          className=\"link\"\r\n          to=\"/information\"\r\n          style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n        >\r\n          <button type=\"button\" class=\"btn btn-success buildButton\">\r\n            Build My Resume Now\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\pages\\login\\Login.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\pages\\signup\\SignUp.jsx",["87"],"import \"./signup.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function SignUP() {\r\n  return (\r\n    <div className=\"register\">\r\n      <span className=\"registerTitle\">Sign Up</span>\r\n      <form className=\"registerForm\">\r\n        <label>Username</label>\r\n        <input\r\n          className=\"registerInput\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your username...\"\r\n        />\r\n        <label>Email</label>\r\n        <input\r\n          className=\"registerInput\"\r\n          type=\"text\"\r\n          placeholder=\"Enter your email...\"\r\n        />\r\n        <label>Password</label>\r\n        <input\r\n          className=\"registerInput\"\r\n          type=\"password\"\r\n          placeholder=\"Enter your password...\"\r\n        />\r\n        <button className=\"registerButton\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\components\\NavButtons\\NavButtons.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\src\\pages\\information\\Information.jsx",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":155,"column":13,"nodeType":"94","messageId":"95","endLine":155,"endColumn":24},{"ruleId":"96","severity":1,"message":"97","line":54,"column":43,"nodeType":"98","messageId":"99","endLine":54,"endColumn":44,"suggestions":"100"},{"ruleId":"96","severity":1,"message":"97","line":54,"column":96,"nodeType":"98","messageId":"99","endLine":54,"endColumn":97,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":107,"column":9,"nodeType":"104","endLine":112,"endColumn":4},{"ruleId":"102","severity":1,"message":"105","line":174,"column":6,"nodeType":"106","endLine":174,"endColumn":8,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":9,"column":9,"nodeType":"110","endLine":13,"endColumn":11},{"ruleId":"111","severity":1,"message":"112","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":14},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["117","118"],["119","120"],"react-hooks/exhaustive-deps","The 'handleNext' function makes the dependencies of useEffect Hook (at line 115) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleNext' in its own useCallback() Hook.","VariableDeclarator","React Hook React.useEffect has missing dependencies: 'InitWhenExpIsOne', 'InitWhenExpIsThree', 'InitWhenExpIsTwo', and 'numberOfExps'. Either include them or remove the dependency array.","ArrayExpression",["121"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"messageId":"122","fix":"123","desc":"124"},{"messageId":"125","fix":"126","desc":"127"},{"messageId":"122","fix":"128","desc":"124"},{"messageId":"125","fix":"129","desc":"127"},{"desc":"130","fix":"131"},"removeEscape",{"range":"132","text":"133"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"134","text":"135"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"136","text":"133"},{"range":"137","text":"135"},"Update the dependencies array to be: [InitWhenExpIsOne, InitWhenExpIsThree, InitWhenExpIsTwo, numberOfExps]",{"range":"138","text":"139"},[1558,1559],"",[1558,1558],"\\",[1611,1612],[1611,1611],[4416,4418],"[InitWhenExpIsOne, InitWhenExpIsThree, InitWhenExpIsTwo, numberOfExps]"]