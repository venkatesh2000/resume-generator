[{"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\index.js":"1","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\App.jsx":"2","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\sample-resumes\\1.js":"3","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\Education\\Education.jsx":"4","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\Skills\\Skills.jsx":"5","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\Experiences\\Experiences.jsx":"6","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\PersonalInfo\\PersonalInfo.jsx":"7","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\Projects\\Projects.jsx":"8","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\Preview\\Preview.jsx":"9","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\navBar\\NavBar.jsx":"10","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\Experiences\\Experience.jsx":"11","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\Projects\\Project.jsx":"12","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\pages\\homePage\\Home.jsx":"13","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\pages\\login\\Login.jsx":"14","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\pages\\signup\\SignUp.jsx":"15","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\pages\\information\\Information.jsx":"16","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\NavButtons\\NavButtons.jsx":"17","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\HorizontalLinearStepper\\HorizontalLinearStepper.jsx":"18","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\navBar2\\NavBar2.jsx":"19"},{"size":234,"mtime":1625299034238,"results":"20","hashOfConfig":"21"},{"size":4479,"mtime":1625327600243,"results":"22","hashOfConfig":"21"},{"size":16746,"mtime":1625299034249,"results":"23","hashOfConfig":"21"},{"size":4983,"mtime":1625299034218,"results":"24","hashOfConfig":"21"},{"size":5290,"mtime":1625299034232,"results":"25","hashOfConfig":"21"},{"size":4016,"mtime":1625299034220,"results":"26","hashOfConfig":"21"},{"size":5904,"mtime":1625299034227,"results":"27","hashOfConfig":"21"},{"size":7514,"mtime":1625299034231,"results":"28","hashOfConfig":"21"},{"size":469,"mtime":1625299034228,"results":"29","hashOfConfig":"21"},{"size":1566,"mtime":1625299199636,"results":"30","hashOfConfig":"21"},{"size":2498,"mtime":1625299034219,"results":"31","hashOfConfig":"21"},{"size":1864,"mtime":1625299034230,"results":"32","hashOfConfig":"21"},{"size":1548,"mtime":1625310310832,"results":"33","hashOfConfig":"21"},{"size":2390,"mtime":1625331651309,"results":"34","hashOfConfig":"21"},{"size":1785,"mtime":1625323808109,"results":"35","hashOfConfig":"21"},{"size":977,"mtime":1625309841236,"results":"36","hashOfConfig":"21"},{"size":1713,"mtime":1625299034225,"results":"37","hashOfConfig":"21"},{"size":1360,"mtime":1625299034222,"results":"38","hashOfConfig":"21"},{"size":1275,"mtime":1625309477083,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"wfd8wh",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\index.js",[],["84","85"],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\App.jsx",["86","87"],"import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n// import TitleBar from \"./components/TitleBar/TitleBar.jsx\";\r\nimport PersonalInfo from \"./components/PersonalInfo/PersonalInfo.jsx\";\r\nimport Skills from \"./components/Skills/Skills.jsx\";\r\nimport Education from \"./components/Education/Education.jsx\";\r\nimport Experiences from \"./components/Experiences/Experiences.jsx\";\r\nimport Projects from \"./components/Projects/Projects.jsx\";\r\nimport Preview from \"./components/Preview/Preview.jsx\";\r\nimport Home from \"./pages/homePage/Home\";\r\nimport Login from \"./pages/login/Login\";\r\nimport SignUp from \"./pages/signup/SignUp\";\r\nimport resumeTemplate from \"./sample-resumes/1.js\";\r\nimport axios from \"axios\";\r\nimport { saveAs } from \"file-saver\";\r\nimport Information from \"./pages/information/Information\";\r\n\r\nconst createAndDownloadPDF = (resume) => {\r\n  axios\r\n    .post(\"http://localhost:5000/information/create-pdf\", resume)\r\n    .then(() => {\r\n      axios\r\n        .get(\"http://localhost:5000/information/fetch-pdf\", {\r\n          responseType: \"arraybuffer\",\r\n        })\r\n        .then((res) => {\r\n          const pdfBlob = new Blob([res.data], { type: \"application/pdf\" });\r\n          saveAs(pdfBlob, `${resume[\"name\"]} - Resume.pdf`);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nconst getForm = (\r\n  resume,\r\n  setResume,\r\n  step,\r\n  setStep,\r\n  numberOfExps,\r\n  setNumberOfExps,\r\n  maxSteps\r\n) => {\r\n  switch (step) {\r\n    case 0:\r\n      return (\r\n        <PersonalInfo\r\n          resume={resume}\r\n          setResume={setResume}\r\n          step={step}\r\n          setStep={setStep}\r\n          maxSteps={maxSteps}\r\n        />\r\n      );\r\n    case 1:\r\n      return (\r\n        <Education\r\n          resume={resume}\r\n          setResume={setResume}\r\n          step={step}\r\n          setStep={setStep}\r\n          maxSteps={maxSteps}\r\n        />\r\n      );\r\n    case 2:\r\n      return (\r\n        <Skills\r\n          resume={resume}\r\n          setResume={setResume}\r\n          step={step}\r\n          setStep={setStep}\r\n          maxSteps={maxSteps}\r\n        />\r\n      );\r\n    case 3:\r\n      return (\r\n        <Experiences\r\n          resume={resume}\r\n          setResume={setResume}\r\n          step={step}\r\n          setStep={setStep}\r\n          setNumberOfExps={setNumberOfExps}\r\n          maxSteps={maxSteps}\r\n        />\r\n      );\r\n    case 4:\r\n      return (\r\n        <Projects\r\n          resume={resume}\r\n          setResume={setResume}\r\n          step={step}\r\n          setStep={setStep}\r\n          numberOfExps={numberOfExps}\r\n          maxSteps={maxSteps}\r\n        />\r\n      );\r\n    // case 5:\r\n    //   return <Languages step={step} setStep={setStep} maxSteps={maxSteps} />;\r\n    default: {\r\n      const html = resumeTemplate(resume);\r\n\r\n      return (\r\n        <Preview\r\n          step={step}\r\n          setStep={setStep}\r\n          maxSteps={maxSteps}\r\n          html={html}\r\n          resume={resume}\r\n          handleDownload={createAndDownloadPDF}\r\n        />\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nconst App = () => {\r\n  const [resume, setResume] = React.useState({});\r\n  const [step, setStep] = React.useState(0);\r\n  const [numberOfExps, setNumberOfExps] = React.useState(0);\r\n  const stepNames = [\r\n    \"Personal Info\",\r\n    \"Education\",\r\n    \"Skills\",\r\n    \"Experiences\",\r\n    \"Projects\",\r\n    // \"Languages\",\r\n    \"Preview\",\r\n  ];\r\n  const optionalSteps = [3, 4];\r\n\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  function addUser(id) {\r\n    setUserId(id);\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login setUser={addUser} />\r\n        </Route>\r\n        <Route path=\"/signup\">\r\n          <SignUp />\r\n        </Route>\r\n        <Route path=\"/information/:userId\">\r\n          <Information\r\n            step={step}\r\n            stepNames={stepNames}\r\n            optionalSteps={optionalSteps}\r\n            resume={resume}\r\n            setResume={setResume}\r\n            step={step}\r\n            setStep={setStep}\r\n            numberOfExps={numberOfExps}\r\n            setNumberOfExps={setNumberOfExps}\r\n            maxSteps={stepNames.length}\r\n            getForm={getForm}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\sample-resumes\\1.js",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\Education\\Education.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\Skills\\Skills.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\Experiences\\Experiences.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\PersonalInfo\\PersonalInfo.jsx",["88","89","90"],"import \"./PersonalInfo.css\";\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport NavButtons from \"../NavButtons/NavButtons.jsx\";\r\n\r\nconst PersonalInfo = (props) => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \"& > *\": {\r\n        marginTop: theme.spacing(2),\r\n        width: \"75ch\",\r\n      },\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const { resume, setResume, step, setStep } = props;\r\n  const [values, setValues] = React.useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    pno: \"\",\r\n    github: \"\",\r\n    linkedin: \"\",\r\n    website: \"\",\r\n  });\r\n  const [errors, setErrors] = React.useState({\r\n    name: false,\r\n    email: false,\r\n    pno: false,\r\n    github: false,\r\n    linkedin: false,\r\n    website: false,\r\n  });\r\n  const [errorMessages, setErrorMessages] = React.useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    pno: \"\",\r\n    github: \"\",\r\n    linkedin: \"\",\r\n    website: \"\",\r\n  });\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n\r\n  const onValueChange = (key, event) => {\r\n    values[key] = event.target.value;\r\n    setValues({ ...values });\r\n  };\r\n  const validateInfo = () => {\r\n    const emailRegex =\r\n      /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    const urlRegex =\r\n      /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/;\r\n\r\n    setIsValidated(false);\r\n\r\n    const newErrors = {\r\n      name: false,\r\n      email: false,\r\n      pno: false,\r\n      github: false,\r\n      linkedin: false,\r\n      website: false,\r\n    };\r\n    const newErrorMessages = {\r\n      name: \"\",\r\n      email: \"\",\r\n      pno: \"\",\r\n      github: \"\",\r\n      linkedin: \"\",\r\n      website: \"\",\r\n    };\r\n    if (!values.name.length) {\r\n      newErrors[\"name\"] = true;\r\n      newErrorMessages[\"name\"] = \"This is a required field!\";\r\n    }\r\n    if (!values.pno.length) {\r\n      newErrors[\"pno\"] = true;\r\n      newErrorMessages[\"pno\"] = \"This is a required field!\";\r\n    }\r\n    if (!values.email.length) {\r\n      newErrors[\"email\"] = true;\r\n      newErrorMessages[\"email\"] = \"This is a required field!\";\r\n    }\r\n    if (values.email.length && !emailRegex.test(values.email)) {\r\n      newErrors[\"email\"] = true;\r\n      newErrorMessages[\"email\"] = \"Please enter a valid email address!\";\r\n    }\r\n    if (values.github.length && !urlRegex.test(values.github)) {\r\n      newErrors[\"github\"] = true;\r\n      newErrorMessages[\"github\"] = \"Please enter a valid URL!\";\r\n    }\r\n    if (values.linkedin.length && !urlRegex.test(values.linkedin)) {\r\n      newErrors[\"linkedin\"] = true;\r\n      newErrorMessages[\"linkedin\"] = \"Please enter a valid URL!\";\r\n    }\r\n    if (values.website.length && !urlRegex.test(values.website)) {\r\n      newErrors[\"website\"] = true;\r\n      newErrorMessages[\"website\"] = \"Please enter a valid URL!\";\r\n    }\r\n\r\n    setErrors({ ...newErrors });\r\n    setErrorMessages({ ...newErrorMessages });\r\n    setIsValidated(true);\r\n  };\r\n  const handleNext = () => {\r\n    if (!Object.values(errors).includes(true)) {\r\n      setResume({ ...resume, ...values })\r\n      setStep(step + 1);\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    if (isValidated) handleNext();\r\n  }, [isValidated, handleNext]);\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"card\">\r\n        <CardContent>\r\n          <form className={classes.root} autoComplete=\"on\">\r\n            <TextField\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.name}\r\n              onChange={(event) => onValueChange(\"name\", event)}\r\n              error={errors.name}\r\n              helperText={errors.name && errorMessages.name}\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"E-mail\"\r\n              variant=\"outlined\"\r\n              value={values.email}\r\n              onChange={(event) => onValueChange(\"email\", event)}\r\n              error={errors.email}\r\n              helperText={errors.email && errorMessages.email}\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"Phone Number\"\r\n              variant=\"outlined\"\r\n              value={values.pno}\r\n              onChange={(event) => onValueChange(\"pno\", event)}\r\n              error={errors.pno}\r\n              helperText={errors.pno && errorMessages.pno}\r\n              required\r\n            />\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card className=\"card\">\r\n        <CardContent>\r\n          <form className={classes.root} autoComplete=\"on\">\r\n            <TextField\r\n              label=\"GitHub URL\"\r\n              variant=\"outlined\"\r\n              value={values.github}\r\n              onChange={(event) => onValueChange(\"github\", event)}\r\n              error={errors.github}\r\n              helperText={errors.github && errorMessages.github}\r\n            />\r\n            <TextField\r\n              label=\"LinkedIn URL\"\r\n              variant=\"outlined\"\r\n              value={values.linkedin}\r\n              onChange={(event) => onValueChange(\"linkedin\", event)}\r\n              error={errors.linkedin}\r\n              helperText={errors.linkedin && errorMessages.linkedin}\r\n            />\r\n            <TextField\r\n              label=\"Website URL\"\r\n              variant=\"outlined\"\r\n              value={values.website}\r\n              onChange={(event) => onValueChange(\"website\", event)}\r\n              error={errors.website}\r\n              helperText={errors.website && errorMessages.website}\r\n            />\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <NavButtons {...props} validateInfo={validateInfo} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonalInfo;\r\n","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\Projects\\Projects.jsx",["91"],"import React from \"react\";\r\nimport Project from \"./Project.jsx\";\r\nimport NavButtons from \"../NavButtons/NavButtons.jsx\";\r\n\r\nconst Projects = (props) => {\r\n  const { resume, setResume, step, setStep, numberOfExps } = props;\r\n  const value = {\r\n    title: \"\",\r\n    link: \"\",\r\n    desc: \"\",\r\n  };\r\n  const error = {\r\n    title: false,\r\n    link: false,\r\n    desc: false,\r\n  };\r\n  const errorMessage = {\r\n    title: \"\",\r\n    link: \"\",\r\n    desc: \"\",\r\n  };\r\n\r\n  const [values, setValues] = React.useState({\r\n    p1: { ...value },\r\n    p2: { ...value },\r\n    p3: { ...value },\r\n    p4: { ...value },\r\n  });\r\n  const [errors, setErrors] = React.useState({\r\n    p1: { ...error },\r\n    p2: { ...error },\r\n    p3: { ...error },\r\n    p4: { ...error },\r\n  });\r\n  const [errorMessages, setErrorMessages] = React.useState({\r\n    p1: { ...errorMessage },\r\n    p2: { ...errorMessage },\r\n    p3: { ...errorMessage },\r\n    p4: { ...errorMessage },\r\n  });\r\n  const [projects, setProjects] = React.useState(0);\r\n  const [isValidated, setIsValidated] = React.useState(false);\r\n\r\n  const onChange = (id, value) => {\r\n    values[id] = value;\r\n    setValues({ ...values });\r\n  };\r\n  const validateInfo = () => {\r\n    setIsValidated(false);\r\n\r\n    let currProjects = 0;\r\n    for (let pro in values) {\r\n      let newError = {\r\n        title: true,\r\n        link: true,\r\n        desc: true,\r\n      };\r\n      let newErrorMessage = {\r\n        title: \"Please provide complete info for this project!\",\r\n        link: \"Please provide complete info for this project!\",\r\n        desc: \"Please provide complete info for this project!\",\r\n      };\r\n\r\n      let flag = false,\r\n        count = 0;\r\n      for (let key in values[pro]) {\r\n        if (values[pro][key].length) {\r\n          flag = true;\r\n          ++count;\r\n          newError[key] = false;\r\n          newErrorMessage[key] = \"\";\r\n        }\r\n      }\r\n\r\n      if (count === 3) ++currProjects;\r\n      if (!flag) {\r\n        newError = {\r\n          title: false,\r\n          link: false,\r\n          desc: false,\r\n        };\r\n        newErrorMessage = {\r\n          title: \"\",\r\n          link: \"\",\r\n          desc: \"\",\r\n        };\r\n      }\r\n      errors[pro] = newError;\r\n      errorMessages[pro] = newErrorMessage;\r\n    }\r\n\r\n    setProjects(currProjects);\r\n    setErrors({ ...errors });\r\n    setErrorMessages({ ...errorMessages });\r\n    setIsValidated(true);\r\n  };\r\n  const handleNext = () => {\r\n    let flag = false;\r\n    for (let error of Object.values(errors)) {\r\n      if (Object.values(error).includes(true)) {\r\n        flag = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    let minProjects = 0;\r\n    if (numberOfExps === 0) minProjects = 2;\r\n    else if (numberOfExps === 1) minProjects = 1;\r\n    else minProjects = 0;\r\n\r\n    if (!flag && projects >= minProjects) {\r\n      setResume({ ...resume, ...values });\r\n      setStep(step + 1);\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    if (isValidated) handleNext();\r\n  });\r\n  const InitWhenExpIsOne = () => {\r\n    const newValues = {\r\n      p1: { ...value },\r\n      p2: { ...value },\r\n      p3: { ...value },\r\n    };\r\n    const newErrors = {\r\n      p1: { ...error },\r\n      p2: { ...error },\r\n      p3: { ...error },\r\n    };\r\n    const newErrorMessages = {\r\n      p1: { ...errorMessage },\r\n      p2: { ...errorMessage },\r\n      p3: { ...errorMessage },\r\n    };\r\n    setValues({ ...newValues });\r\n    setErrors({ ...newErrors });\r\n    setErrorMessages({ ...newErrorMessages });\r\n  };\r\n  const InitWhenExpIsTwo = () => {\r\n    const newValues = {\r\n      p1: { ...value },\r\n      p2: { ...value },\r\n    };\r\n    const newErrors = {\r\n      p1: { ...error },\r\n      p2: { ...error },\r\n    };\r\n    const newErrorMessages = {\r\n      p1: { ...errorMessage },\r\n      p2: { ...errorMessage },\r\n    };\r\n    setValues({ ...newValues });\r\n    setErrors({ ...newErrors });\r\n    setErrorMessages({ ...newErrorMessages });\r\n  };\r\n  const InitWhenExpIsThree = () => {\r\n    const newValues = {\r\n      p1: { ...value },\r\n    };\r\n    const newErrors = {\r\n      p1: { ...error },\r\n    };\r\n    const newErrorMessages = {\r\n      p1: { ...errorMessage },\r\n    };\r\n    setValues({ ...newValues });\r\n    setErrors({ ...newErrors });\r\n    setErrorMessages({ ...newErrorMessages });\r\n  };\r\n  React.useEffect(() => {\r\n    if (numberOfExps === 1) InitWhenExpIsOne();\r\n    else if (numberOfExps === 2) InitWhenExpIsTwo();\r\n    else if (numberOfExps === 3) InitWhenExpIsThree();\r\n  }, []);\r\n\r\n  if (numberOfExps === 0) {\r\n    return (\r\n      <div>\r\n        <h3>\r\n          As you haven't entered any experiences, please provide at least 2\r\n          projects below\r\n        </h3>\r\n        <Project\r\n          id=\"p1\"\r\n          onChange={onChange}\r\n          values={values[\"p1\"]}\r\n          errors={errors[\"p1\"]}\r\n          errorMessages={errorMessages[\"p1\"]}\r\n        />\r\n        <Project\r\n          id=\"p2\"\r\n          onChange={onChange}\r\n          values={values[\"p2\"]}\r\n          errors={errors[\"p2\"]}\r\n          errorMessages={errorMessages[\"p2\"]}\r\n        />\r\n        <Project\r\n          id=\"p3\"\r\n          onChange={onChange}\r\n          values={values[\"p3\"]}\r\n          errors={errors[\"p3\"]}\r\n          errorMessages={errorMessages[\"p3\"]}\r\n        />\r\n        <Project\r\n          id=\"p4\"\r\n          onChange={onChange}\r\n          values={values[\"p4\"]}\r\n          errors={errors[\"p4\"]}\r\n          errorMessages={errorMessages[\"p4\"]}\r\n        />\r\n        <NavButtons {...props} validateInfo={validateInfo} />\r\n      </div>\r\n    );\r\n  } else if (numberOfExps === 1) {\r\n    return (\r\n      <div>\r\n        <h3>\r\n          As you have entered only 1 experience, please provide at least 1\r\n          project below\r\n        </h3>\r\n        <Project\r\n          id=\"p1\"\r\n          onChange={onChange}\r\n          values={values[\"p1\"]}\r\n          errors={errors[\"p1\"]}\r\n          errorMessages={errorMessages[\"p1\"]}\r\n        />\r\n        <Project\r\n          id=\"p2\"\r\n          onChange={onChange}\r\n          values={values[\"p2\"]}\r\n          errors={errors[\"p2\"]}\r\n          errorMessages={errorMessages[\"p2\"]}\r\n        />\r\n        <Project\r\n          id=\"p3\"\r\n          onChange={onChange}\r\n          values={values[\"p3\"]}\r\n          errors={errors[\"p3\"]}\r\n          errorMessages={errorMessages[\"p3\"]}\r\n        />\r\n        <NavButtons {...props} validateInfo={validateInfo} />\r\n      </div>\r\n    );\r\n  } else if (numberOfExps === 2) {\r\n    return (\r\n      <div>\r\n        <Project\r\n          id=\"p1\"\r\n          onChange={onChange}\r\n          values={values[\"p1\"]}\r\n          errors={errors[\"p1\"]}\r\n          errorMessages={errorMessages[\"p1\"]}\r\n        />\r\n        <Project\r\n          id=\"p2\"\r\n          onChange={onChange}\r\n          values={values[\"p2\"]}\r\n          errors={errors[\"p2\"]}\r\n          errorMessages={errorMessages[\"p2\"]}\r\n        />\r\n        <NavButtons {...props} validateInfo={validateInfo} />\r\n      </div>\r\n    );\r\n  } else if (numberOfExps === 3) {\r\n    return (\r\n      <div>\r\n        <Project\r\n          id=\"p1\"\r\n          onChange={onChange}\r\n          values={values[\"p1\"]}\r\n          errors={errors[\"p1\"]}\r\n          errorMessages={errorMessages[\"p1\"]}\r\n        />\r\n        <NavButtons {...props} validateInfo={validateInfo} />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h3>\r\n          As you have entered 4 experiences, there is no need for projects\r\n        </h3>\r\n        <h4>Please move to the next step</h4>\r\n        <NavButtons {...props} validateInfo={validateInfo} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Projects;\r\n","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\Preview\\Preview.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\navBar\\NavBar.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\Experiences\\Experience.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\Projects\\Project.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\pages\\homePage\\Home.jsx",["92"],"import React from \"react\";\r\nimport \"./home.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from \"../../components/navBar/NavBar\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <NavBar />\r\n      <div className=\"imageDiv\">\r\n        <img\r\n          className=\"homeImage\"\r\n          src=\"https://images.pexels.com/photos/590016/pexels-photo-590016.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\r\n          alt=\"home image\"\r\n        />\r\n      </div>\r\n      <div className=\"statement\">\r\n        <h2 className=\"bigStatement\">\r\n          \" Only 2% of resumes make it past the first round. Be in the top 2%. \"\r\n        </h2>\r\n        <h4 className=\"smallStatement\">\r\n          Save your time and effort with this easy to use Resume Builder to\r\n          build your custom style professional resume and apply for your dream\r\n          job in easy and fast in just three easy steps.\r\n        </h4>\r\n        <div className=\"steps\">\r\n          <h3>1. Enter your information</h3>\r\n          <i class=\"fas fa-arrow-down\"></i>\r\n          <h3>2. Choose your template</h3>\r\n          <i class=\"fas fa-arrow-down\"></i>\r\n          <h3>3. Download your Resume</h3>\r\n        </div>\r\n        <Link\r\n          className=\"link\"\r\n          to=\"/information\"\r\n          style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n        >\r\n          <button type=\"button\" class=\"btn btn-success buildButton\">\r\n            Build My Resume Now\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\pages\\login\\Login.jsx",["93","94"],"import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./login.css\";\r\n\r\nvar url;\r\n\r\nexport default function Login(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userId, setUserID] = useState(\"\");\r\n  const [err, setError] = useState(false);\r\n  // const [url, setUrl] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(false);\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n      // console.log(res.data._id);\r\n\r\n      if (res.data) {\r\n        setUserID(res.data._id);\r\n      }\r\n      // url = await `/information/${userId}`;\r\n      // // url = \"/information/\".concat(\"\", userId);\r\n      // await console.log(url);\r\n      // changePage(url);\r\n\r\n      // await window.location.replace(url);\r\n    } catch (err) {\r\n      setError(true);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    url = `/information/${userId}`;\r\n    // console.log(url);\r\n    if (userId != \"\") {\r\n      window.location.replace(url);\r\n    }\r\n\r\n    // window.location.replace(url);\r\n  }, [userId]);\r\n\r\n  // async function changePage(url) {\r\n  //   await window.location.replace(url);\r\n  // }\r\n\r\n  // function handleClick(e) {\r\n  //   e.preventDefault();\r\n  //   props.setUser(userId);\r\n  // }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <span className=\"loginTitle\">Login</span>\r\n      <form className=\"loginForm\" onSubmit={handleSubmit}>\r\n        <label>Email</label>\r\n        <input\r\n          type=\"email\"\r\n          className=\"loginInput\"\r\n          placeholder=\"Enter your Email...\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          className=\"loginInput\"\r\n          placeholder=\"Enter your password...\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        {/* <Link to={\"/information/\" + userId}> */}\r\n        <button className=\"loginButton\" type=\"submit\">\r\n          Login\r\n        </button>\r\n        {/* </Link> */}\r\n      </form>\r\n      {err && (\r\n        <span style={{ color: \"red\", marginTop: \"10px\" }}>\r\n          Invalid Email Id or password !!\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\pages\\signup\\SignUp.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\pages\\information\\Information.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\NavButtons\\NavButtons.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\HorizontalLinearStepper\\HorizontalLinearStepper.jsx",[],"C:\\Users\\satish\\Documents\\webProject\\resume-generator\\client\\src\\components\\navBar2\\NavBar2.jsx",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":136,"column":10,"nodeType":"101","messageId":"102","endLine":136,"endColumn":16},{"ruleId":"103","severity":1,"message":"104","line":161,"column":13,"nodeType":"105","messageId":"106","endLine":161,"endColumn":24},{"ruleId":"107","severity":1,"message":"108","line":54,"column":43,"nodeType":"109","messageId":"110","endLine":54,"endColumn":44,"suggestions":"111"},{"ruleId":"107","severity":1,"message":"108","line":54,"column":96,"nodeType":"109","messageId":"110","endLine":54,"endColumn":97,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":107,"column":9,"nodeType":"115","endLine":112,"endColumn":4},{"ruleId":"113","severity":1,"message":"116","line":174,"column":6,"nodeType":"117","endLine":174,"endColumn":8,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":11,"column":9,"nodeType":"121","endLine":15,"endColumn":11},{"ruleId":"99","severity":1,"message":"122","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":44,"column":16,"nodeType":"125","messageId":"126","endLine":44,"endColumn":18},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'userId' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["129","130"],["131","132"],"react-hooks/exhaustive-deps","The 'handleNext' function makes the dependencies of useEffect Hook (at line 115) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleNext' in its own useCallback() Hook.","VariableDeclarator","React Hook React.useEffect has missing dependencies: 'InitWhenExpIsOne', 'InitWhenExpIsThree', 'InitWhenExpIsTwo', and 'numberOfExps'. Either include them or remove the dependency array.","ArrayExpression",["133"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Link' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"messageId":"134","fix":"135","desc":"136"},{"messageId":"137","fix":"138","desc":"139"},{"messageId":"134","fix":"140","desc":"136"},{"messageId":"137","fix":"141","desc":"139"},{"desc":"142","fix":"143"},"removeEscape",{"range":"144","text":"145"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"146","text":"147"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"148","text":"145"},{"range":"149","text":"147"},"Update the dependencies array to be: [InitWhenExpIsOne, InitWhenExpIsThree, InitWhenExpIsTwo, numberOfExps]",{"range":"150","text":"151"},[1558,1559],"",[1558,1558],"\\",[1611,1612],[1611,1611],[4416,4418],"[InitWhenExpIsOne, InitWhenExpIsThree, InitWhenExpIsTwo, numberOfExps]"]